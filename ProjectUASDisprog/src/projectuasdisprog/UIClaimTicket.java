/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projectuasdisprog;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DANIEL
 */
public class UIClaimTicket extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form FormClaimTicket
     */
    Socket clientSocket;
    Thread t;
    DataOutputStream out;
    BufferedReader in;
    
    public UIClaimTicket(String username) {
        
        try {
            initComponents();

            //UNTUK MULTITHREADING TCP
            //clientSocket = new Socket("localhost", 8282);
            clientSocket = new Socket("localhost", 8282);
            if (t == null) {
                t = new Thread(this, "Client");
                t.start();
            }

            //declare untuk in (terima message) dan out (kirim message)
            in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
            out = new DataOutputStream(clientSocket.getOutputStream());

            //kirim data minta daftar acara yg tersedia berdasarkan user yg sedang login
            labelNama.setText(username);
            
            
            sendMessage("BacaTiket:"+username);
            //terima data parkiran yang dimiliki
            String message = in.readLine();
            if(!(message.equals(""))){
                String[] daftarClaim = message.split("!");
            DefaultTableModel model = (DefaultTableModel) TableClaimTicket.getModel();
            model.setRowCount(0);
            Object[] rowData = new Object[6];
            for (String claim : daftarClaim) {
                String[] daftarClaimTicket = claim.split(":");
                rowData[0] = daftarClaimTicket[0];
                rowData[1] = daftarClaimTicket[2];
                rowData[2] = daftarClaimTicket[3];
                rowData[3] = daftarClaimTicket[4];
                rowData[4] = daftarClaimTicket[5];
                rowData[5] = daftarClaimTicket[1];
                model.addRow(rowData);
            }
                
            }
            
            
            
            
        } catch (Exception ex) {
            System.out.println("Error di daftar tiket: " + ex.getMessage());
            ex.printStackTrace();
        }

        // Atur tinggi baris
        TableClaimTicket.setRowHeight(50);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LabelEvents = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableClaimTicket = new javax.swing.JTable();
        LabelEvents1 = new javax.swing.JLabel();
        buttonClaim = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        labelNamaUser = new javax.swing.JLabel();
        nama = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        icon = new javax.swing.JLabel();
        labelNama = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(950, 700));
        getContentPane().setLayout(null);

        LabelEvents.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        LabelEvents.setText("Claim Your Ticket Here!");
        getContentPane().add(LabelEvents);
        LabelEvents.setBounds(40, 120, 201, 25);

        TableClaimTicket.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        TableClaimTicket.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Kode", "Nama", "Jenis", "Tanggal", "Lokasi", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TableClaimTicket);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(40, 150, 840, 340);

        LabelEvents1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        LabelEvents1.setText("CLAIM TICKET");
        getContentPane().add(LabelEvents1);
        LabelEvents1.setBounds(370, 220, 237, 48);

        buttonClaim.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonClaim.setForeground(new java.awt.Color(0, 204, 51));
        buttonClaim.setText("CLAIM");
        buttonClaim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClaimActionPerformed(evt);
            }
        });
        getContentPane().add(buttonClaim);
        buttonClaim.setBounds(740, 490, 140, 40);

        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(490, 355, 37, 16);
        getContentPane().add(labelNamaUser);
        labelNamaUser.setBounds(20, 30, 0, 0);

        nama.setText("Nama User Login");
        getContentPane().add(nama);
        nama.setBounds(150, 210, 220, 16);

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(204, 0, 0));
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack);
        btnBack.setBounds(590, 490, 140, 40);

        icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projectuasdisprog/images/claimticket.png"))); // NOI18N
        icon.setText("Nama User Login");
        getContentPane().add(icon);
        icon.setBounds(-80, -20, 1020, 690);

        labelNama.setText("Nama User Login");
        getContentPane().add(labelNama);
        labelNama.setBounds(10, 10, 220, 16);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonClaimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClaimActionPerformed
        try {
        // Dapatkan baris yang dipilih dari tabel
        int selectedRow = TableClaimTicket.getSelectedRow();

        // Pastikan ada baris yang dipilih
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih tiket yang ingin di-claim terlebih dahulu.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } 
            else {
            // Dapatkan kode tiket dari baris yang dipilih
            String kodeTiket = (String) TableClaimTicket.getValueAt(selectedRow, 0);
            String statusTiket = (String) TableClaimTicket.getValueAt(selectedRow, 5);

            if ("CLAIM".equalsIgnoreCase(statusTiket)) //gak usah perhatiin upper or lower case
            {
                JOptionPane.showMessageDialog(this, "Tiket ini sudah di-claim.", "Warning", JOptionPane.WARNING_MESSAGE);
            } 
            else {
                // Kirim pesan ke server untuk melakukan claim tiket dengan kodeTiket
                sendMessage("UpdateStatusToClaim:" + kodeTiket);
                String message = in.readLine();
                JOptionPane.showMessageDialog(this, message+ " Tiket dengan kode " + kodeTiket + " telah berhasil di-claim.", 
                        "Success", JOptionPane.INFORMATION_MESSAGE);

                System.out.println("Tiket dengan kode " + kodeTiket + " telah berhasil di-claim.");

                refreshTable();
            }
        }

    } catch (Exception e) {
        System.out.println("Error saat melakukan claim tiket: " + e.getMessage());
        e.printStackTrace(); // Print full stack trace for debugging
    }
    }//GEN-LAST:event_buttonClaimActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        ChooseSubMenu ch = new ChooseSubMenu();
        String username = labelNama.getText();
        ch.labelUsername.setText(username);
        ch.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UIClaimTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UIClaimTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UIClaimTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UIClaimTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UIClaimTicket("").setVisible(true);
            }
        });
    }

    public void sendMessage(String s) //METHOD UTK MENGIRIM PESAN KE SERVER
    {
        try {
            out.writeBytes(s + "\n");
            out.flush();
        } catch (Exception e) {
            System.out.println("Error sending message: " + e.getMessage());
            e.printStackTrace(); // Print the full stack trace for debugging
        }
    }

    private void refreshTable() {
        try {
            String username = labelNama.getText();
            // Kirim pesan untuk meminta data tiket terbaru dari server
            sendMessage("BacaTiket:"+username);

            // Terima data tiket dari server
            String message = in.readLine();
            String[] daftarClaim = message.split("!"); // Split message untuk mendapatkan daftar semua tiket

            // Bersihkan tabel sebelum memasukkan data baru
            DefaultTableModel model = (DefaultTableModel) TableClaimTicket.getModel();
            model.setRowCount(0);

            // Tambahkan data baru ke tabel
            Object[] rowData = new Object[6];
            for (String claim : daftarClaim) {
                String[] daftarClaimTicket = claim.split(":");
                rowData[0] = daftarClaimTicket[0];
                rowData[1] = daftarClaimTicket[2];
                rowData[2] = daftarClaimTicket[3];
                rowData[3] = daftarClaimTicket[4];
                rowData[4] = daftarClaimTicket[5];
                rowData[5] = daftarClaimTicket[1];
                model.addRow(rowData);
            }

        } catch (IOException ex) {
            System.out.println("Error saat refresh tabel: " + ex.getMessage());
            ex.printStackTrace(); // Print full stack trace for debugging
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelEvents;
    private javax.swing.JLabel LabelEvents1;
    public javax.swing.JTable TableClaimTicket;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton buttonClaim;
    public javax.swing.JLabel icon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JLabel labelNama;
    private javax.swing.JLabel labelNamaUser;
    public javax.swing.JLabel nama;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        while (true) {

        }
    }

}
